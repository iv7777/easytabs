<?php
/**
 * Product additional attributes template
 *
 * @see Mage_Catalog_Block_Product_View_Attributes
 */
?>
<?php
    $_helper = $this->helper('catalog/output');
    $_product = $this->getProduct()
?>
<?php if($_additional = $this->getAdditionalData()):

    $grouped = (bool) $this->getIsGrouped();
    if ($grouped) {
        $setId = $_product->getAttributeSetId(); // Attribute set Id
        $groups = Mage::getModel('eav/entity_attribute_group')
            ->getResourceCollection()
            ->setAttributeSetFilter($setId)
            ->setSortOrder()
            ->load();

        $attributeCodes = array();
        foreach ($groups as $group) {
            $groupName          = $group->getAttributeGroupName();
            $groupId            = $group->getAttributeGroupId();

            $attributes = Mage::getResourceModel('catalog/product_attribute_collection')
                ->setAttributeGroupFilter($group->getId())
                ->addVisibleFilter()
                ->checkConfigurableProducts()
                ->load();
            if ($attributes->getSize() > 0) {
                foreach ($attributes->getItems() as $attribute) {
                    /* @var $child Mage_Eav_Model_Entity_Attribute */
                    $attributeCodes[$attribute->getAttributeCode()] = array(
                        'id' => $groupId,
                        'name' => $groupName,
                        'sort_order' => $group->getSortOrder()
                    );
                    // uncomment for debug
                    // if ($attribute->getIsVisibleOnFront() && $attribute->getIsUserDefined()) {
                        // $_additional[$attribute->getAttributeCode()] = array(
                        //     "label" => $attribute->getFrontendLabel(),
                        //     "value" => $attribute->getDefaultValue() . ' xx',
                        //     "code" => $attribute->getAttributeCode()
                        // );
                    // }
                }
            }
        }

        foreach ($_additional as &$data) {
            $data['group'] = isset($attributeCodes[$data['code']]) ? $attributeCodes[$data['code']] : array();
        }
        usort($_additional, function($a, $b) {
            return $a['group']['sort_order'] - $b['group']['sort_order'];
        });
        $_additionalFirst = current($_additional);
        $groupId = $_additionalFirst['group']['id'];
        $groupName = $groupNames[$groupId];
        $firstGroupRendered = false;
    }
?>
<div class="box-collateral box-additional">
    <table class="data-table" id="product-attribute-specs-table">
        <col width="25%" />
        <col />
        <tbody>
        <?php foreach ($_additional as $_data):
            if ($grouped && (false == $firstGroupRendered || $_data['group']['id'] != $groupId)) :
                $groupId = $_data['group']['id'];
                $groupName = $_data['group']['name'];
                $firstGroupRendered = true;
            ?>
            <tr>
                <th class="data group-label" colspan="2"><?php echo $groupName ?></th>
            </tr>
            <?php endif;
                $_label = $this->htmlEscape($this->__($_data['label']));
                $_value = $_helper->productAttribute($_product, $_data['value'], $_data['code']);
            ?>
            <tr>
                <th class="label"><?php echo $_label ?></th>
                <td class="data"><?php echo $_value ?></td>
            </tr>
        <?php endforeach; ?>
        </tbody>
    </table>
    <script type="text/javascript">decorateTable('product-attribute-specs-table')</script>
</div>
<?php endif;?>
